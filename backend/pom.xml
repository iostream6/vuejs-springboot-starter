<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.munoor</groupId>
        <artifactId>vuejs-springboot-starter</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>backend</artifactId>
    <packaging>jar</packaging>
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- We overide the default setting whether or not to skip the exec-maven-plugin  -->
        <!-- This overide may be superceeded by user property, i.e. command line args -->
        <!-- https://stackoverflow.com/a/26638601 -->
        <maven.exec.skip>true</maven.exec.skip> 
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
      
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- The below managed bundling of front-end module as part of springboot build -->
            <!-- Notes: Working directory is optional
                 Plugin phase set as valid (compile phase does not have the intended result
                 the second execution group is to ceate public resources directory, move front end resources: Can also use maven-resources-plugin
                 see ref https://stackoverflow.com/questions/6960487/maven-copying-directories-using-exec-plugin
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>run-npm-build</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.exec.skip}</skip>
                            <executable>npm</executable>
                            <workingDirectory>../frontend</workingDirectory>
                            <arguments>
                                <argument>run</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>                   
                    <execution>
                        <id>front-end-resources-copy</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.exec.skip}</skip>
                            <executable>bash</executable>
                            <arguments>
                                <argument>-c</argument>
                                <argument>mkdir src/main/resources/public; cp -r ../frontend/dist/* src/main/resources/public/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions> 
            </plugin>
        </plugins>
    </build>
</project>
